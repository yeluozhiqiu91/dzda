// Generated by swift-generator from dzda/lsmx.thrift

package com.igool.rpc.db.model.thrift;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;
import java.io.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("Lsmx")
public final class Lsmx  implements Serializable
{
    public Lsmx() {
    }

    private String businessCode;

    @ThriftField(value=1, name="businessCode", requiredness=Requiredness.NONE)
    public String getBusinessCode() { return businessCode; }

    @ThriftField
    public void setBusinessCode(final String businessCode) { this.businessCode = businessCode; }

    private String fileCode;

    @ThriftField(value=2, name="fileCode", requiredness=Requiredness.NONE)
    public String getFileCode() { return fileCode; }

    @ThriftField
    public void setFileCode(final String fileCode) { this.fileCode = fileCode; }

    private String pcCode;

    @ThriftField(value=3, name="pcCode", requiredness=Requiredness.NONE)
    public String getPcCode() { return pcCode; }

    @ThriftField
    public void setPcCode(final String pcCode) { this.pcCode = pcCode; }

    private String box;

    @ThriftField(value=4, name="box", requiredness=Requiredness.NONE)
    public String getBox() { return box; }

    @ThriftField
    public void setBox(final String box) { this.box = box; }

    private String signDate;

    @ThriftField(value=5, name="signDate", requiredness=Requiredness.NONE)
    public String getSignDate() { return signDate; }

    @ThriftField
    public void setSignDate(final String signDate) { this.signDate = signDate; }

    private int userId;

    @ThriftField(value=6, name="userId", requiredness=Requiredness.NONE)
    public int getUserId() { return userId; }

    @ThriftField
    public void setUserId(final int userId) { this.userId = userId; }

    private String userName;

    @ThriftField(value=7, name="userName", requiredness=Requiredness.NONE)
    public String getUserName() { return userName; }

    @ThriftField
    public void setUserName(final String userName) { this.userName = userName; }

    private int businessId;

    @ThriftField(value=8, name="businessId", requiredness=Requiredness.NONE)
    public int getBusinessId() { return businessId; }

    @ThriftField
    public void setBusinessId(final int businessId) { this.businessId = businessId; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("businessCode", businessCode)
            .add("fileCode", fileCode)
            .add("pcCode", pcCode)
            .add("box", box)
            .add("signDate", signDate)
            .add("userId", userId)
            .add("userName", userName)
            .add("businessId", businessId)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        Lsmx other = (Lsmx)o;

        return
            Objects.equals(businessCode, other.businessCode) &&
            Objects.equals(fileCode, other.fileCode) &&
            Objects.equals(pcCode, other.pcCode) &&
            Objects.equals(box, other.box) &&
            Objects.equals(signDate, other.signDate) &&
            Objects.equals(userId, other.userId) &&
            Objects.equals(userName, other.userName) &&
            Objects.equals(businessId, other.businessId);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            businessCode,
            fileCode,
            pcCode,
            box,
            signDate,
            userId,
            userName,
            businessId
        });
    }
}
