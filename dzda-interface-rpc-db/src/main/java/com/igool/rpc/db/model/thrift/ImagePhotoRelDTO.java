// Generated by swift-generator from dzda/imagephotoreldto.thrift

package com.igool.rpc.db.model.thrift;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;
import java.io.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("ImagePhotoRelDTO")
public final class ImagePhotoRelDTO  implements Serializable
{
    public ImagePhotoRelDTO() {
    }

    private String lsh;

    @ThriftField(value=1, name="lsh", requiredness=Requiredness.NONE)
    public String getLsh() { return lsh; }

    @ThriftField
    public void setLsh(final String lsh) { this.lsh = lsh; }

    private int businessDetailId;

    @ThriftField(value=2, name="businessDetailId", requiredness=Requiredness.NONE)
    public int getBusinessDetailId() { return businessDetailId; }

    @ThriftField
    public void setBusinessDetailId(final int businessDetailId) { this.businessDetailId = businessDetailId; }

    private int userId;

    @ThriftField(value=3, name="userId", requiredness=Requiredness.NONE)
    public int getUserId() { return userId; }

    @ThriftField
    public void setUserId(final int userId) { this.userId = userId; }

    private String createDate;

    @ThriftField(value=4, name="createDate", requiredness=Requiredness.NONE)
    public String getCreateDate() { return createDate; }

    @ThriftField
    public void setCreateDate(final String createDate) { this.createDate = createDate; }

    private String operatorType;

    @ThriftField(value=5, name="operatorType", requiredness=Requiredness.NONE)
    public String getOperatorType() { return operatorType; }

    @ThriftField
    public void setOperatorType(final String operatorType) { this.operatorType = operatorType; }

    private int orderNum;

    @ThriftField(value=6, name="orderNum", requiredness=Requiredness.NONE)
    public int getOrderNum() { return orderNum; }

    @ThriftField
    public void setOrderNum(final int orderNum) { this.orderNum = orderNum; }

    private String photoCode;

    @ThriftField(value=7, name="photoCode", requiredness=Requiredness.NONE)
    public String getPhotoCode() { return photoCode; }

    @ThriftField
    public void setPhotoCode(final String photoCode) { this.photoCode = photoCode; }

    private String url;

    @ThriftField(value=8, name="url", requiredness=Requiredness.NONE)
    public String getUrl() { return url; }

    @ThriftField
    public void setUrl(final String url) { this.url = url; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("lsh", lsh)
            .add("businessDetailId", businessDetailId)
            .add("userId", userId)
            .add("createDate", createDate)
            .add("operatorType", operatorType)
            .add("orderNum", orderNum)
            .add("photoCode", photoCode)
            .add("url", url)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        ImagePhotoRelDTO other = (ImagePhotoRelDTO)o;

        return
            Objects.equals(lsh, other.lsh) &&
            Objects.equals(businessDetailId, other.businessDetailId) &&
            Objects.equals(userId, other.userId) &&
            Objects.equals(createDate, other.createDate) &&
            Objects.equals(operatorType, other.operatorType) &&
            Objects.equals(orderNum, other.orderNum) &&
            Objects.equals(photoCode, other.photoCode) &&
            Objects.equals(url, other.url);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            lsh,
            businessDetailId,
            userId,
            createDate,
            operatorType,
            orderNum,
            photoCode,
            url
        });
    }
}
