// Generated by swift-generator from dzda/noticeinfo.thrift

package com.igool.rpc.db.model.thrift;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;
import java.io.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("NoticeInfo")
public final class NoticeInfo  implements Serializable
{
    public NoticeInfo() {
    }

    private int noticeId;

    @ThriftField(value=1, name="noticeId", requiredness=Requiredness.NONE)
    public int getNoticeId() { return noticeId; }

    @ThriftField
    public void setNoticeId(final int noticeId) { this.noticeId = noticeId; }

    private String name;

    @ThriftField(value=2, name="name", requiredness=Requiredness.NONE)
    public String getName() { return name; }

    @ThriftField
    public void setName(final String name) { this.name = name; }

    private int status;

    @ThriftField(value=3, name="status", requiredness=Requiredness.NONE)
    public int getStatus() { return status; }

    @ThriftField
    public void setStatus(final int status) { this.status = status; }

    private String releaseTime;

    @ThriftField(value=4, name="releaseTime", requiredness=Requiredness.NONE)
    public String getReleaseTime() { return releaseTime; }

    @ThriftField
    public void setReleaseTime(final String releaseTime) { this.releaseTime = releaseTime; }

    private int createUser;

    @ThriftField(value=5, name="createUser", requiredness=Requiredness.NONE)
    public int getCreateUser() { return createUser; }

    @ThriftField
    public void setCreateUser(final int createUser) { this.createUser = createUser; }

    private String createTime;

    @ThriftField(value=6, name="createTime", requiredness=Requiredness.NONE)
    public String getCreateTime() { return createTime; }

    @ThriftField
    public void setCreateTime(final String createTime) { this.createTime = createTime; }

    private int orderNumber;

    @ThriftField(value=7, name="orderNumber", requiredness=Requiredness.NONE)
    public int getOrderNumber() { return orderNumber; }

    @ThriftField
    public void setOrderNumber(final int orderNumber) { this.orderNumber = orderNumber; }

    private String textId;

    @ThriftField(value=8, name="textId", requiredness=Requiredness.NONE)
    public String getTextId() { return textId; }

    @ThriftField
    public void setTextId(final String textId) { this.textId = textId; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("noticeId", noticeId)
            .add("name", name)
            .add("status", status)
            .add("releaseTime", releaseTime)
            .add("createUser", createUser)
            .add("createTime", createTime)
            .add("orderNumber", orderNumber)
            .add("textId", textId)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        NoticeInfo other = (NoticeInfo)o;

        return
            Objects.equals(noticeId, other.noticeId) &&
            Objects.equals(name, other.name) &&
            Objects.equals(status, other.status) &&
            Objects.equals(releaseTime, other.releaseTime) &&
            Objects.equals(createUser, other.createUser) &&
            Objects.equals(createTime, other.createTime) &&
            Objects.equals(orderNumber, other.orderNumber) &&
            Objects.equals(textId, other.textId);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            noticeId,
            name,
            status,
            releaseTime,
            createUser,
            createTime,
            orderNumber,
            textId
        });
    }
}
