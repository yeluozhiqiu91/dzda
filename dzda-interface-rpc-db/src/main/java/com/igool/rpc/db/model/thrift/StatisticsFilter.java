// Generated by swift-generator from dzda/statisticsfilter.thrift

package com.igool.rpc.db.model.thrift;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;
import java.io.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("StatisticsFilter")
public final class StatisticsFilter  implements Serializable
{
    public StatisticsFilter() {
    }

    private int jjlx;

    @ThriftField(value=1, name="jjlx", requiredness=Requiredness.NONE)
    public int getJjlx() { return jjlx; }

    @ThriftField
    public void setJjlx(final int jjlx) { this.jjlx = jjlx; }

    private int businessId;

    @ThriftField(value=2, name="businessId", requiredness=Requiredness.NONE)
    public int getBusinessId() { return businessId; }

    @ThriftField
    public void setBusinessId(final int businessId) { this.businessId = businessId; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("jjlx", jjlx)
            .add("businessId", businessId)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        StatisticsFilter other = (StatisticsFilter)o;

        return
            Objects.equals(jjlx, other.jjlx) &&
            Objects.equals(businessId, other.businessId);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            jjlx,
            businessId
        });
    }
}
