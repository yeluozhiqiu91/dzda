// Generated by swift-generator from dzda/departmentservice.thrift

package com.igool.rpc.db.service.thrift;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.service.*;
import com.google.common.util.concurrent.ListenableFuture;
import java.io.*;
import java.util.*;


@ThriftService("DepartmentService")
public interface DepartmentService extends Closeable
{
    @ThriftService("DepartmentService")
    public interface Async extends Closeable
    {
        void close();

        @ThriftMethod(value = "getDepartmentList")
        ListenableFuture<List<com.igool.rpc.db.model.thrift.Department>> getDepartmentList();

        @ThriftMethod(value = "addDepartment")
        ListenableFuture<Void> addDepartment(
            @ThriftField(value=1, name="department", requiredness=Requiredness.NONE) final com.igool.rpc.db.model.thrift.Department department
        );

        @ThriftMethod(value = "findDepartmentById")
        ListenableFuture<com.igool.rpc.db.model.thrift.Department> findDepartmentById(
            @ThriftField(value=1, name="departmentId", requiredness=Requiredness.NONE) final int departmentId
        );

        @ThriftMethod(value = "updateDepartment")
        ListenableFuture<Void> updateDepartment(
            @ThriftField(value=1, name="department", requiredness=Requiredness.NONE) final com.igool.rpc.db.model.thrift.Department department
        );

        @ThriftMethod(value = "getChildrenCount")
        ListenableFuture<Integer> getChildrenCount(
            @ThriftField(value=1, name="departmentId", requiredness=Requiredness.NONE) final int departmentId
        );

        @ThriftMethod(value = "getPersonCount")
        ListenableFuture<Integer> getPersonCount(
            @ThriftField(value=1, name="departmentId", requiredness=Requiredness.NONE) final int departmentId
        );

        @ThriftMethod(value = "deleteDepartmentById")
        ListenableFuture<Void> deleteDepartmentById(
            @ThriftField(value=1, name="departmentId", requiredness=Requiredness.NONE) final int departmentId
        );
    }
    void close();


    @ThriftMethod(value = "getDepartmentList")
    List<com.igool.rpc.db.model.thrift.Department> getDepartmentList() throws org.apache.thrift.TException;

    @ThriftMethod(value = "addDepartment")
    void addDepartment(
        @ThriftField(value=1, name="department", requiredness=Requiredness.NONE) final com.igool.rpc.db.model.thrift.Department department
    ) throws org.apache.thrift.TException;

    @ThriftMethod(value = "findDepartmentById")
    com.igool.rpc.db.model.thrift.Department findDepartmentById(
        @ThriftField(value=1, name="departmentId", requiredness=Requiredness.NONE) final int departmentId
    ) throws org.apache.thrift.TException;

    @ThriftMethod(value = "updateDepartment")
    void updateDepartment(
        @ThriftField(value=1, name="department", requiredness=Requiredness.NONE) final com.igool.rpc.db.model.thrift.Department department
    ) throws org.apache.thrift.TException;

    @ThriftMethod(value = "getChildrenCount")
    int getChildrenCount(
        @ThriftField(value=1, name="departmentId", requiredness=Requiredness.NONE) final int departmentId
    ) throws org.apache.thrift.TException;

    @ThriftMethod(value = "getPersonCount")
    int getPersonCount(
        @ThriftField(value=1, name="departmentId", requiredness=Requiredness.NONE) final int departmentId
    ) throws org.apache.thrift.TException;

    @ThriftMethod(value = "deleteDepartmentById")
    void deleteDepartmentById(
        @ThriftField(value=1, name="departmentId", requiredness=Requiredness.NONE) final int departmentId
    ) throws org.apache.thrift.TException;
}