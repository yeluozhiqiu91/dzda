// Generated by swift-generator from dzda/businessname.thrift

package com.igool.rpc.db.model.thrift;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;
import java.io.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("BusinessNameInfo")
public final class BusinessNameInfo  implements Serializable
{
    public BusinessNameInfo() {
    }

    private int businessNameId;

    @ThriftField(value=1, name="businessNameId", requiredness=Requiredness.NONE)
    public int getBusinessNameId() { return businessNameId; }

    @ThriftField
    public void setBusinessNameId(final int businessNameId) { this.businessNameId = businessNameId; }

    private int businessDetailId;

    @ThriftField(value=2, name="businessDetailId", requiredness=Requiredness.NONE)
    public int getBusinessDetailId() { return businessDetailId; }

    @ThriftField
    public void setBusinessDetailId(final int businessDetailId) { this.businessDetailId = businessDetailId; }

    private String businessName;

    @ThriftField(value=3, name="businessName", requiredness=Requiredness.NONE)
    public String getBusinessName() { return businessName; }

    @ThriftField
    public void setBusinessName(final String businessName) { this.businessName = businessName; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("businessNameId", businessNameId)
            .add("businessDetailId", businessDetailId)
            .add("businessName", businessName)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        BusinessNameInfo other = (BusinessNameInfo)o;

        return
            Objects.equals(businessNameId, other.businessNameId) &&
            Objects.equals(businessDetailId, other.businessDetailId) &&
            Objects.equals(businessName, other.businessName);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            businessNameId,
            businessDetailId,
            businessName
        });
    }
}
