// Generated by swift-generator from dzda/imageinfo.thrift

package com.igool.rpc.db.model.thrift;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;
import java.io.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("MinAndMaxId")
public final class MinAndMaxId  implements Serializable
{
    public MinAndMaxId() {
    }

    private int minId;

    @ThriftField(value=1, name="minId", requiredness=Requiredness.NONE)
    public int getMinId() { return minId; }

    @ThriftField
    public void setMinId(final int minId) { this.minId = minId; }

    private int maxId;

    @ThriftField(value=2, name="maxId", requiredness=Requiredness.NONE)
    public int getMaxId() { return maxId; }

    @ThriftField
    public void setMaxId(final int maxId) { this.maxId = maxId; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("minId", minId)
            .add("maxId", maxId)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        MinAndMaxId other = (MinAndMaxId)o;

        return
            Objects.equals(minId, other.minId) &&
            Objects.equals(maxId, other.maxId);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            minId,
            maxId
        });
    }
}
