// Generated by swift-generator from dzda/vehicleoperator.thrift

package com.igool.rpc.db.model.thrift;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;
import java.io.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("VehicleOperator")
public final class VehicleOperator  implements Serializable
{
    public VehicleOperator() {
    }

    private int id;

    @ThriftField(value=1, name="id", requiredness=Requiredness.NONE)
    public int getId() { return id; }

    @ThriftField
    public void setId(final int id) { this.id = id; }

    private String sfz;

    @ThriftField(value=2, name="sfz", requiredness=Requiredness.NONE)
    public String getSfz() { return sfz; }

    @ThriftField
    public void setSfz(final String sfz) { this.sfz = sfz; }

    private String company;

    @ThriftField(value=3, name="company", requiredness=Requiredness.NONE)
    public String getCompany() { return company; }

    @ThriftField
    public void setCompany(final String company) { this.company = company; }

    private int czlx;

    @ThriftField(value=4, name="czlx", requiredness=Requiredness.NONE)
    public int getCzlx() { return czlx; }

    @ThriftField
    public void setCzlx(final int czlx) { this.czlx = czlx; }

    private String dycl;

    @ThriftField(value=5, name="dycl", requiredness=Requiredness.NONE)
    public String getDycl() { return dycl; }

    @ThriftField
    public void setDycl(final String dycl) { this.dycl = dycl; }

    private String createTime;

    @ThriftField(value=6, name="createTime", requiredness=Requiredness.NONE)
    public String getCreateTime() { return createTime; }

    @ThriftField
    public void setCreateTime(final String createTime) { this.createTime = createTime; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("id", id)
            .add("sfz", sfz)
            .add("company", company)
            .add("czlx", czlx)
            .add("dycl", dycl)
            .add("createTime", createTime)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        VehicleOperator other = (VehicleOperator)o;

        return
            Objects.equals(id, other.id) &&
            Objects.equals(sfz, other.sfz) &&
            Objects.equals(company, other.company) &&
            Objects.equals(czlx, other.czlx) &&
            Objects.equals(dycl, other.dycl) &&
            Objects.equals(createTime, other.createTime);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            id,
            sfz,
            company,
            czlx,
            dycl,
            createTime
        });
    }
}
