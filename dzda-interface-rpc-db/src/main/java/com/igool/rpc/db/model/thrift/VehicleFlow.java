// Generated by swift-generator from dzda/vehicleflow.thrift

package com.igool.rpc.db.model.thrift;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;
import java.io.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("VehicleFlow")
public final class VehicleFlow  implements Serializable
{
    public VehicleFlow() {
    }

    private String dabh;

    @ThriftField(value=1, name="dabh", requiredness=Requiredness.NONE)
    public String getDabh() { return dabh; }

    @ThriftField
    public void setDabh(final String dabh) { this.dabh = dabh; }

    private String hpzl;

    @ThriftField(value=2, name="hpzl", requiredness=Requiredness.NONE)
    public String getHpzl() { return hpzl; }

    @ThriftField
    public void setHpzl(final String hpzl) { this.hpzl = hpzl; }

    private String hphm;

    @ThriftField(value=3, name="hphm", requiredness=Requiredness.NONE)
    public String getHphm() { return hphm; }

    @ThriftField
    public void setHphm(final String hphm) { this.hphm = hphm; }

    private String ywlx;

    @ThriftField(value=4, name="ywlx", requiredness=Requiredness.NONE)
    public String getYwlx() { return ywlx; }

    @ThriftField
    public void setYwlx(final String ywlx) { this.ywlx = ywlx; }

    private String clsbdh;

    @ThriftField(value=5, name="clsbdh", requiredness=Requiredness.NONE)
    public String getClsbdh() { return clsbdh; }

    @ThriftField
    public void setClsbdh(final String clsbdh) { this.clsbdh = clsbdh; }

    private String sqrq;

    @ThriftField(value=6, name="sqrq", requiredness=Requiredness.NONE)
    public String getSqrq() { return sqrq; }

    @ThriftField
    public void setSqrq(final String sqrq) { this.sqrq = sqrq; }

    private String xh;

    @ThriftField(value=7, name="xh", requiredness=Requiredness.NONE)
    public String getXh() { return xh; }

    @ThriftField
    public void setXh(final String xh) { this.xh = xh; }

    private String lszt;

    @ThriftField(value=8, name="lszt", requiredness=Requiredness.NONE)
    public String getLszt() { return lszt; }

    @ThriftField
    public void setLszt(final String lszt) { this.lszt = lszt; }

    private String lsh;

    @ThriftField(value=9, name="lsh", requiredness=Requiredness.NONE)
    public String getLsh() { return lsh; }

    @ThriftField
    public void setLsh(final String lsh) { this.lsh = lsh; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("dabh", dabh)
            .add("hpzl", hpzl)
            .add("hphm", hphm)
            .add("ywlx", ywlx)
            .add("clsbdh", clsbdh)
            .add("sqrq", sqrq)
            .add("xh", xh)
            .add("lszt", lszt)
            .add("lsh", lsh)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        VehicleFlow other = (VehicleFlow)o;

        return
            Objects.equals(dabh, other.dabh) &&
            Objects.equals(hpzl, other.hpzl) &&
            Objects.equals(hphm, other.hphm) &&
            Objects.equals(ywlx, other.ywlx) &&
            Objects.equals(clsbdh, other.clsbdh) &&
            Objects.equals(sqrq, other.sqrq) &&
            Objects.equals(xh, other.xh) &&
            Objects.equals(lszt, other.lszt) &&
            Objects.equals(lsh, other.lsh);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            dabh,
            hpzl,
            hphm,
            ywlx,
            clsbdh,
            sqrq,
            xh,
            lszt,
            lsh
        });
    }
}
