// Generated by swift-generator from dzda/vehicleservice.thrift

package com.igool.rpc.db.service.thrift;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.service.*;
import com.google.common.util.concurrent.ListenableFuture;
import java.io.*;
import java.util.*;


@ThriftService("VehicleService")
public interface VehicleService extends Closeable
{
    @ThriftService("VehicleService")
    public interface Async extends Closeable
    {
        void close();

        @ThriftMethod(value = "addVehicleOperator")
        ListenableFuture<Void> addVehicleOperator(
            @ThriftField(value=1, name="vehicleoperator", requiredness=Requiredness.NONE) final com.igool.rpc.db.model.thrift.VehicleOperator vehicleoperator
        );

        @ThriftMethod(value = "getFindRegisterByTypeAndStr")
        ListenableFuture<List<com.igool.rpc.db.model.thrift.FindRegister>> getFindRegisterByTypeAndStr(
            @ThriftField(value=1, name="str", requiredness=Requiredness.NONE) final String str
        );

        @ThriftMethod(value = "findAllVehicleBySfz")
        ListenableFuture<List<com.igool.rpc.db.model.thrift.VehicleDetailDTO>> findAllVehicleBySfz(
            @ThriftField(value=1, name="sfzs", requiredness=Requiredness.NONE) final String sfzs,
            @ThriftField(value=2, name="hphms", requiredness=Requiredness.NONE) final String hphms,
            @ThriftField(value=3, name="hpzls", requiredness=Requiredness.NONE) final String hpzls
        );

        @ThriftMethod(value = "findAllImageByLsh")
        ListenableFuture<List<com.igool.rpc.db.model.thrift.ImageDetail>> findAllImageByLsh(
            @ThriftField(value=1, name="lsh", requiredness=Requiredness.NONE) final String lsh
        );

        @ThriftMethod(value = "findAllImageInfoByBusinesses")
        ListenableFuture<List<com.igool.rpc.db.model.thrift.ImageInfo>> findAllImageInfoByBusinesses(
            @ThriftField(value=1, name="businessList", requiredness=Requiredness.NONE) final List<com.igool.rpc.db.model.thrift.Business> businessList
        );
    }
    void close();


    @ThriftMethod(value = "addVehicleOperator")
    void addVehicleOperator(
        @ThriftField(value=1, name="vehicleoperator", requiredness=Requiredness.NONE) final com.igool.rpc.db.model.thrift.VehicleOperator vehicleoperator
    ) throws org.apache.thrift.TException;

    @ThriftMethod(value = "getFindRegisterByTypeAndStr")
    List<com.igool.rpc.db.model.thrift.FindRegister> getFindRegisterByTypeAndStr(
        @ThriftField(value=1, name="str", requiredness=Requiredness.NONE) final String str
    ) throws org.apache.thrift.TException;

    @ThriftMethod(value = "findAllVehicleBySfz")
    List<com.igool.rpc.db.model.thrift.VehicleDetailDTO> findAllVehicleBySfz(
        @ThriftField(value=1, name="sfzs", requiredness=Requiredness.NONE) final String sfzs,
        @ThriftField(value=2, name="hphms", requiredness=Requiredness.NONE) final String hphms,
        @ThriftField(value=3, name="hpzls", requiredness=Requiredness.NONE) final String hpzls
    ) throws org.apache.thrift.TException;

    @ThriftMethod(value = "findAllImageByLsh")
    List<com.igool.rpc.db.model.thrift.ImageDetail> findAllImageByLsh(
        @ThriftField(value=1, name="lsh", requiredness=Requiredness.NONE) final String lsh
    ) throws org.apache.thrift.TException;

    @ThriftMethod(value = "findAllImageInfoByBusinesses")
    List<com.igool.rpc.db.model.thrift.ImageInfo> findAllImageInfoByBusinesses(
        @ThriftField(value=1, name="businessList", requiredness=Requiredness.NONE) final List<com.igool.rpc.db.model.thrift.Business> businessList
    ) throws org.apache.thrift.TException;
}