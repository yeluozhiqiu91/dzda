// Generated by swift-generator from dzda/jurisdictioninfo.thrift

package com.igool.rpc.db.model.thrift;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;
import java.io.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("JurisdictionInfo")
public final class JurisdictionInfo  implements Serializable
{
    public JurisdictionInfo() {
    }

    private int jurisdictionId;

    @ThriftField(value=1, name="jurisdictionId", requiredness=Requiredness.NONE)
    public int getJurisdictionId() { return jurisdictionId; }

    @ThriftField
    public void setJurisdictionId(final int jurisdictionId) { this.jurisdictionId = jurisdictionId; }

    private String code;

    @ThriftField(value=2, name="code", requiredness=Requiredness.NONE)
    public String getCode() { return code; }

    @ThriftField
    public void setCode(final String code) { this.code = code; }

    private String name;

    @ThriftField(value=3, name="name", requiredness=Requiredness.NONE)
    public String getName() { return name; }

    @ThriftField
    public void setName(final String name) { this.name = name; }

    private String declare;

    @ThriftField(value=4, name="declare", requiredness=Requiredness.NONE)
    public String getDeclare() { return declare; }

    @ThriftField
    public void setDeclare(final String declare) { this.declare = declare; }

    private int createUser;

    @ThriftField(value=5, name="createUser", requiredness=Requiredness.NONE)
    public int getCreateUser() { return createUser; }

    @ThriftField
    public void setCreateUser(final int createUser) { this.createUser = createUser; }

    private String createDate;

    @ThriftField(value=6, name="createDate", requiredness=Requiredness.NONE)
    public String getCreateDate() { return createDate; }

    @ThriftField
    public void setCreateDate(final String createDate) { this.createDate = createDate; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("jurisdictionId", jurisdictionId)
            .add("code", code)
            .add("name", name)
            .add("declare", declare)
            .add("createUser", createUser)
            .add("createDate", createDate)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        JurisdictionInfo other = (JurisdictionInfo)o;

        return
            Objects.equals(jurisdictionId, other.jurisdictionId) &&
            Objects.equals(code, other.code) &&
            Objects.equals(name, other.name) &&
            Objects.equals(declare, other.declare) &&
            Objects.equals(createUser, other.createUser) &&
            Objects.equals(createDate, other.createDate);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            jurisdictionId,
            code,
            name,
            declare,
            createUser,
            createDate
        });
    }
}
