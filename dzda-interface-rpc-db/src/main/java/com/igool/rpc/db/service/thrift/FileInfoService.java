// Generated by swift-generator from dzda/fileinfoservice.thrift

package com.igool.rpc.db.service.thrift;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.service.*;
import com.google.common.util.concurrent.ListenableFuture;
import java.io.*;
import java.util.*;


@ThriftService("FileInfoService")
public interface FileInfoService extends Closeable
{
    @ThriftService("FileInfoService")
    public interface Async extends Closeable
    {
        void close();

        @ThriftMethod(value = "addFileInfo")
        ListenableFuture<Void> addFileInfo(
            @ThriftField(value=1, name="businessinfo", requiredness=Requiredness.NONE) final com.igool.rpc.db.model.thrift.BusinessInfo businessinfo
        );

        @ThriftMethod(value = "findFileInfoAndBusinessInfoByFileCode")
        ListenableFuture<Map<com.igool.rpc.db.model.thrift.FileInfo, List<com.igool.rpc.db.model.thrift.BusinessInfo>>> findFileInfoAndBusinessInfoByFileCode(
            @ThriftField(value=1, name="fileCode", requiredness=Requiredness.NONE) final String fileCode
        );

        @ThriftMethod(value = "updateLshStatus")
        ListenableFuture<Void> updateLshStatus(
            @ThriftField(value=1, name="type", requiredness=Requiredness.NONE) final String type,
            @ThriftField(value=2, name="businessId", requiredness=Requiredness.NONE) final String businessId,
            @ThriftField(value=3, name="fileId", requiredness=Requiredness.NONE) final String fileId
        );

        @ThriftMethod(value = "getBusinessTypeDetailByBusinessType")
        ListenableFuture<List<com.igool.rpc.db.model.thrift.BusinessTypeDetail>> getBusinessTypeDetailByBusinessType(
            @ThriftField(value=1, name="businessId", requiredness=Requiredness.NONE) final String businessId,
            @ThriftField(value=2, name="businessType", requiredness=Requiredness.NONE) final String businessType
        );

        @ThriftMethod(value = "findFileInfoByFileCode")
        ListenableFuture<com.igool.rpc.db.model.thrift.FileInfo> findFileInfoByFileCode(
            @ThriftField(value=1, name="fileCode", requiredness=Requiredness.NONE) final String fileCode
        );
    }
    void close();


    @ThriftMethod(value = "addFileInfo")
    void addFileInfo(
        @ThriftField(value=1, name="businessinfo", requiredness=Requiredness.NONE) final com.igool.rpc.db.model.thrift.BusinessInfo businessinfo
    ) throws org.apache.thrift.TException;

    @ThriftMethod(value = "findFileInfoAndBusinessInfoByFileCode")
    Map<com.igool.rpc.db.model.thrift.FileInfo, List<com.igool.rpc.db.model.thrift.BusinessInfo>> findFileInfoAndBusinessInfoByFileCode(
        @ThriftField(value=1, name="fileCode", requiredness=Requiredness.NONE) final String fileCode
    ) throws org.apache.thrift.TException;

    @ThriftMethod(value = "updateLshStatus")
    void updateLshStatus(
        @ThriftField(value=1, name="type", requiredness=Requiredness.NONE) final String type,
        @ThriftField(value=2, name="businessId", requiredness=Requiredness.NONE) final String businessId,
        @ThriftField(value=3, name="fileId", requiredness=Requiredness.NONE) final String fileId
    ) throws org.apache.thrift.TException;

    @ThriftMethod(value = "getBusinessTypeDetailByBusinessType")
    List<com.igool.rpc.db.model.thrift.BusinessTypeDetail> getBusinessTypeDetailByBusinessType(
        @ThriftField(value=1, name="businessId", requiredness=Requiredness.NONE) final String businessId,
        @ThriftField(value=2, name="businessType", requiredness=Requiredness.NONE) final String businessType
    ) throws org.apache.thrift.TException;

    @ThriftMethod(value = "findFileInfoByFileCode")
    com.igool.rpc.db.model.thrift.FileInfo findFileInfoByFileCode(
        @ThriftField(value=1, name="fileCode", requiredness=Requiredness.NONE) final String fileCode
    ) throws org.apache.thrift.TException;
}