// Generated by swift-generator from dzda/noticeaccessoryrel.thrift

package com.igool.rpc.db.model.thrift;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;
import java.io.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("NoticeAccessoryRel")
public final class NoticeAccessoryRel  implements Serializable
{
    public NoticeAccessoryRel() {
    }

    private int naId;

    @ThriftField(value=1, name="naId", requiredness=Requiredness.NONE)
    public int getNaId() { return naId; }

    @ThriftField
    public void setNaId(final int naId) { this.naId = naId; }

    private int noticeId;

    @ThriftField(value=2, name="noticeId", requiredness=Requiredness.NONE)
    public int getNoticeId() { return noticeId; }

    @ThriftField
    public void setNoticeId(final int noticeId) { this.noticeId = noticeId; }

    private String accessoryId;

    @ThriftField(value=3, name="accessoryId", requiredness=Requiredness.NONE)
    public String getAccessoryId() { return accessoryId; }

    @ThriftField
    public void setAccessoryId(final String accessoryId) { this.accessoryId = accessoryId; }

    private String accessoryName;

    @ThriftField(value=4, name="accessoryName", requiredness=Requiredness.NONE)
    public String getAccessoryName() { return accessoryName; }

    @ThriftField
    public void setAccessoryName(final String accessoryName) { this.accessoryName = accessoryName; }

    private int createUser;

    @ThriftField(value=5, name="createUser", requiredness=Requiredness.NONE)
    public int getCreateUser() { return createUser; }

    @ThriftField
    public void setCreateUser(final int createUser) { this.createUser = createUser; }

    private String createTime;

    @ThriftField(value=6, name="createTime", requiredness=Requiredness.NONE)
    public String getCreateTime() { return createTime; }

    @ThriftField
    public void setCreateTime(final String createTime) { this.createTime = createTime; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("naId", naId)
            .add("noticeId", noticeId)
            .add("accessoryId", accessoryId)
            .add("accessoryName", accessoryName)
            .add("createUser", createUser)
            .add("createTime", createTime)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        NoticeAccessoryRel other = (NoticeAccessoryRel)o;

        return
            Objects.equals(naId, other.naId) &&
            Objects.equals(noticeId, other.noticeId) &&
            Objects.equals(accessoryId, other.accessoryId) &&
            Objects.equals(accessoryName, other.accessoryName) &&
            Objects.equals(createUser, other.createUser) &&
            Objects.equals(createTime, other.createTime);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            naId,
            noticeId,
            accessoryId,
            accessoryName,
            createUser,
            createTime
        });
    }
}
