// Generated by swift-generator from dzda/userrolesrel.thrift

package com.igool.rpc.db.model.thrift;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;
import java.io.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("UserRolesRel")
public final class UserRolesRel  implements Serializable
{
    public UserRolesRel() {
    }

    private int urId;

    @ThriftField(value=1, name="urId", requiredness=Requiredness.NONE)
    public int getUrId() { return urId; }

    @ThriftField
    public void setUrId(final int urId) { this.urId = urId; }

    private int rolesId;

    @ThriftField(value=2, name="rolesId", requiredness=Requiredness.NONE)
    public int getRolesId() { return rolesId; }

    @ThriftField
    public void setRolesId(final int rolesId) { this.rolesId = rolesId; }

    private int userId;

    @ThriftField(value=3, name="userId", requiredness=Requiredness.NONE)
    public int getUserId() { return userId; }

    @ThriftField
    public void setUserId(final int userId) { this.userId = userId; }

    private int createUser;

    @ThriftField(value=4, name="createUser", requiredness=Requiredness.NONE)
    public int getCreateUser() { return createUser; }

    @ThriftField
    public void setCreateUser(final int createUser) { this.createUser = createUser; }

    private String createDate;

    @ThriftField(value=5, name="createDate", requiredness=Requiredness.NONE)
    public String getCreateDate() { return createDate; }

    @ThriftField
    public void setCreateDate(final String createDate) { this.createDate = createDate; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("urId", urId)
            .add("rolesId", rolesId)
            .add("userId", userId)
            .add("createUser", createUser)
            .add("createDate", createDate)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        UserRolesRel other = (UserRolesRel)o;

        return
            Objects.equals(urId, other.urId) &&
            Objects.equals(rolesId, other.rolesId) &&
            Objects.equals(userId, other.userId) &&
            Objects.equals(createUser, other.createUser) &&
            Objects.equals(createDate, other.createDate);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            urId,
            rolesId,
            userId,
            createUser,
            createDate
        });
    }
}
